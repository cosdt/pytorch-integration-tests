{
    "name": "test_bench",
    "environ": {
        "pytorch_git_version": "81d824d17afb18b3c696f3e5a4799a246d29cfde",
        "pytorch_version": "2.6.0.dev20241031+cpu"
    },
    "metrics": {
        "model=pytorch_CycleGAN_and_pix2pix, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_Whisper, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=dcgan, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=basic_gnn_edgecnn, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=functorch_maml_omniglot, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_Reformer, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_two_runs_differ",
        "model=detectron2_fasterrcnn_r_101_fpn, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=pytorch_stargan, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_T5_large, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=detectron2_fasterrcnn_r_50_fpn, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=hf_Bert_large, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=detectron2_fasterrcnn_r_50_c4, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=pyhpc_isoneutral_mixing, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_T5, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_Bart, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=detectron2_fasterrcnn_r_50_dc5, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=BERT_pytorch, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_GPT2, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=moco, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "not_implemented",
        "model=phlippe_densenet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=llava, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "NPU out of memory. Tried to allocate 174.00 MiB (NPU 0; 29.50 GiB total capacity; 28.26 GiB already allocated; 28.26 GiB current active; 34.06 MiB free; 29.10 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.",
        "model=squeezenet1_1, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=functorch_dp_cifar10, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=Background_Matting, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_Bert, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=doctr_reco_predictor, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=torch_multimodal_clip, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=drq, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=LearningToPaint, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=detectron2_maskrcnn_r_50_c4, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=detectron2_maskrcnn_r_50_fpn, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=tacotron2, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_two_runs_differ",
        "model=mobilenet_v2_quantized_qat, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "not_implemented",
        "model=hf_GPT2_large, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=detectron2_maskrcnn, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=timm_regnet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=Super_SloMo, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=lennard_jones, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=phlippe_resnet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=llama, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_distil_whisper, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=resnet50_quantized_qat, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "not_implemented",
        "model=fastNLP_Bert, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=timm_vision_transformer_large, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=demucs, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=pyhpc_equation_of_state, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_T5_base, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_BigBird, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_T5_generate, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=detectron2_maskrcnn_r_101_fpn, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=hf_Longformer, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=sam, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=nanogpt, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=densenet121, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=tts_angular, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=vision_maskrcnn, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "module 'torch' has no attribute '_six'",
        "model=basic_gnn_gin, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_DistilBert, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=detectron2_fasterrcnn_r_101_dc5, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=cm3leon_generate, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=dlrm, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=basic_gnn_sage, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=nvidia_deeprecommender, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "'DeepRecommenderInferenceBenchmark' object has no attribute 'rencoder'",
        "model=sam_fast, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "No module named 'segment_anything_fast'",
        "model=simple_gpt, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "not_implemented",
        "model=detectron2_fcos_r_50_fpn, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=hf_Albert, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=maml, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_clip, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=opacus_cifar10, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=speech_transformer, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=yolov3, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=mobilenet_v3_large, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=timm_resnest, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=timm_vision_transformer, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=timm_efficientdet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "\nobject has no attribute nms:\n  File \"/usr/local/python3.10/lib/python3.10/site-packages/torchvision/ops/boxes.py\", line 41\n        _log_api_usage_once(nms)\n    _assert_has_ops()\n    return torch.ops.torchvision.nms(boxes, scores, iou_threshold)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\n'nms' is being compiled since it was called from '_batched_nms_vanilla'\n  File \"/usr/local/python3.10/lib/python3.10/site-packages/torchvision/ops/boxes.py\", line 109\n    for class_id in torch.unique(idxs):\n        curr_indices = torch.where(idxs == class_id)[0]\n        curr_keep_indices = nms(boxes[curr_indices], scores[curr_indices], iou_threshold)\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\n        keep_mask[curr_indices[curr_keep_indices]] = True\n    keep_indices = torch.where(keep_mask)[0]\n'_batched_nms_vanilla' is being compiled since it was called from 'batched_nms'\n  File \"/usr/local/python3.10/lib/python3.10/site-packages/torchvision/ops/boxes.py\", line 73\n    # https://github.com/pytorch/vision/issues/1311#issuecomment-781329339\n    if boxes.numel() > (4000 if boxes.device.type == \"cpu\" else 20000) and not torchvision._is_tracing():\n        return _batched_nms_vanilla(boxes, scores, idxs, iou_threshold)\n               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\n    else:\n        return _batched_nms_coordinate_trick(boxes, scores, idxs, iou_threshold)\n'batched_nms' is being compiled since it was called from 'generate_detections'\n  File \"/usr/local/python3.10/lib/python3.10/site-packages/effdet/anchors.py\", line 140\n        scores[top_detection_idx] = soft_scores\n    else:\n        top_detection_idx = batched_nms(boxes, scores, classes, iou_threshold=0.5)\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\n\n    # keep only top max_det_per_image scoring predictions\n'generate_detections' is being compiled since it was called from '_batch_detection'\n  File \"/usr/local/python3.10/lib/python3.10/site-packages/effdet/bench.py\", line 82\n        img_scale_i = None if img_scale is None else img_scale[i]\n        img_size_i = None if img_size is None else img_size[i]\n        detections = generate_detections(\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n            class_out[i],\n            ~~~~~~~~~~~~~\n            box_out[i],\n            ~~~~~~~~~~~\n            anchor_boxes,\n            ~~~~~~~~~~~~~\n            indices[i],\n            ~~~~~~~~~~~\n            classes[i],\n            ~~~~~~~~~~~\n            img_scale_i,\n            ~~~~~~~~~~~~\n            img_size_i,\n            ~~~~~~~~~~~\n            max_det_per_image=max_det_per_image,\n            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n            soft_nms=soft_nms,\n            ~~~~~~~~~~~~~~~~~ <--- HERE\n        )\n        batch_detections.append(detections)\n",
        "model=timm_vovnet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=vgg16, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=moondream, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_2nd_run_fail",
        "model=resnet18, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=basic_gnn_gcn, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=detectron2_fasterrcnn_r_101_c4, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=shufflenet_v2_x1_0, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=timm_efficientnet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=soft_actor_critic, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=alexnet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=mobilenet_v2, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=detectron2_maskrcnn_r_101_c4, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "eager_1st_run_fail",
        "model=stable_diffusion_text_encoder, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "not_implemented",
        "model=timm_nfnet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=simple_gpt_tp_manual, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "not_implemented",
        "model=resnet152, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=pyhpc_turbulent_kinetic_energy, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=maml_omniglot, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=stable_diffusion_unet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "not_implemented",
        "model=pytorch_unet, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=doctr_det_predictor, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=resnet50, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=mnasnet1_0, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=llama_v2_7b_16h, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "not_implemented",
        "model=microbench_unbacked_tolist_sum, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=resnext50_32x4d, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass",
        "model=hf_Roberta_base, test=eval, device=npu, bs=None, extra_args=['--accuracy'], metric=accuracy": "pass"
    }
}