name: '[Internal] Build and Test'

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
        description: The runner selected to run on
      device:
        required: true
        type: string
        description: The device selected to run on
      image:
        required: true
        type: string
        description: The docker image which will be loaded

jobs:
  build-and-test:
    name: build and test in ${{ inputs.image }} with ${{ inputs.device }}
    runs-on: ${{ inputs.runner }}
    defaults:
      run:
        shell: bash -el {0}
    container:
      image: ${{ inputs.image }}
      env:
        HOME: /root
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64/:/usr/local/Ascend/driver/lib64/
        - /usr/local/Ascend/driver/version.info:/usr/local/Ascend/driver/version.info
        - /home/runner/actions-runner/codes:/root/codes
      options: >-
        --network host
        --device ${{ inputs.device }}
        --device /dev/davinci_manager
        --device /dev/devmm_svm
        --device /dev/hisi_hdc
    steps:
      #- name: Set environment
      #  run: |
      #    source /root/.bashrc && conda activate torch_npu

      - name: Prepare the codes
        run: |
          cp -rf /root/codes /root/build

      #- name: Compile torch
      #  working-directory: /root/build/pytorch/pytorch
      #  run: |
      #    pip3 install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
      #    export _GLIBCXX_USE_CXX11_ABI=0
      #    export USE_CUDA=0
      #    export USE_XNNPACK=0
      #    python setup.py develop

      - name: Install system dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          apt update
          apt install --no-install-recommends -y \
              git \
              gcc-10 \
              g++-10 \
              make \
              cmake \
              ninja-build

      - name: Create symlinks for gcc and g++
        run: |
          ln -s /usr/bin/gcc-10 /usr/bin/gcc
          ln -s /usr/bin/g++-10 /usr/bin/g++

      - name: Install pip dependencies
        run: |
          pip install -i https://pypi.tuna.tsinghua.edu.cn/simple \
              wheel \
              setuptools \
              unittest-xml-reporting

      - name: Show versions
        run: |
          set -x
          python --version
          pip --version
          gcc --version
          g++ --version
          make --version
          cmake --version
          ninja --version

      - name: Show NPU info
        run: |
          npu-smi info

      - name: Compile and install torch_npu
        working-directory: /root/build/npu/pytorch
        run: |
          pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
          bash ci/build.sh --python=`python --version | awk '{print $2}' | cut -d '.' -f 1,2`
          pip install dist/torch_npu*.whl

      - name: Do the test
        continue-on-error: true
        working-directory: /root/build
        run: |
          pip install -r npu/pytorch/test/requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --no-deps
          python npu/pytorch/ci/access_control_test.py
