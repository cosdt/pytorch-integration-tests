name: '_ascend_npu_test'

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
        description: 'The runner selected to run on'
      device:
        required: true
        type: string
        description: 'The device selected to run on'
      image:
        required: true
        type: string
        description: 'The docker image which will be loaded'
      artifact_name:
        required: true
        type: string
        description: 'The torch_npu distribution artifact name'

# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

jobs:
  test:
    name: test torch_npu in ${{ inputs.image }} with ${{ inputs.device }}
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.image }}
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64/:/usr/local/Ascend/driver/lib64/
        - /usr/local/Ascend/driver/version.info:/usr/local/Ascend/driver/version.info
        - /etc/ascend_install.info:/etc/ascend_install.info
        - /home/runner/actions-runner/codes:/root/codes
      options: >-
        --network host
        --device ${{ inputs.device }}
        --device /dev/davinci_manager
        --device /dev/devmm_svm
        --device /dev/hisi_hdc
    steps:
      - name: Show NPU info
        run: |
          npu-smi info

      - name: Prepare the codes
        run: |
          cp -rf /root/codes /root/build

      - name: Download distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: /root/build

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/actions/dependencies-action
        with:
          pip_packages: |
            - wheel
            - unittest-xml-reporting
          pip_requirements: |
            - /root/build/npu/pytorch/requirements.txt
            - /root/build/npu/pytorch/test/requirements.txt --no-deps

      - name: Install torch_npu
        working-directory: /root/build
        run: |
          pip install ${{ inputs.artifact_name }}

      # TODO(shink): Skip
      - name: Do the test
        continue-on-error: true
        working-directory: /root/build
        run: |
          python npu/pytorch/ci/access_control_test.py
        env:
          DISABLED_TESTS_FILE: /root/build/npu/pytorch/test/unsupported_test_cases/.pytorch-disabled-tests.json
