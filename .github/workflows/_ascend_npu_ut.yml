name: '_ascend_npu_ut'

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
        description: 'The runner selected to run on'
      image:
        required: true
        type: string
        description: 'The docker image which will be loaded'
      device:
        required: true
        type: string
        description: 'The device selected to run on'
      artifact_name:
        required: true
        type: string
        description: 'The torch_npu distribution artifact name'

# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

jobs:
  test:
    name: test torch_npu
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.image }}
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64/:/usr/local/Ascend/driver/lib64/
        - /usr/local/Ascend/driver/version.info:/usr/local/Ascend/driver/version.info
        - /etc/ascend_install.info:/etc/ascend_install.info
      options: >-
        --network host
        --device ${{ inputs.device }}
        --device /dev/davinci_manager
        --device /dev/devmm_svm
        --device /dev/hisi_hdc
      env:
        HTTP_PROXY: http://127.0.0.1:10809
        HTTPS_PROXY: http://127.0.0.1:10809
        ALL_PROXY: socks5://127.0.0.1:10808
        SOCKS_PROXY: socks5://127.0.0.1:10808
    steps:
      - name: Show NPU info
        run: |
          npu-smi info

      - name: Config mirrors
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y git gcc g++ make cmake ninja-build

      # See: https://github.com/actions/checkout/issues/363#issuecomment-1915075699
      - name: Config git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout torch_npu
        uses: actions/checkout@v4
        with:
          # TODO(shink): Use Ascend/pytorch once this pr merged:
          # https://gitee.com/ascend/pytorch/pulls/12854
          # repository: Ascend/pytorch
          repository: shink/torchnpu
          ref: feat/autoload
          path: torch_npu

      - name: Download distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: torch_npu

      - name: Install pip dependencies
        working-directory: torch_npu
        run: |
          pip install wheel unittest-xml-reporting
          pip install -r requirements.txt
          pip install -r test/requirements.txt --no-deps

      - name: Install torch_npu
        working-directory: torch_npu
        run: |
          pip install ${{ inputs.artifact_name }}

      # TODO(shink): Skip
      - name: Do the test
        continue-on-error: true
        run: |
          python torch_npu/ci/access_control_test.py
