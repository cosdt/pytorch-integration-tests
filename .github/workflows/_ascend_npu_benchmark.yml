name: '_ascend_npu_benchmark'

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
        description: 'The runner selected to run on'
      image:
        required: true
        type: string
        description: 'The docker image which will be loaded'
      device:
        required: true
        type: string
        description: 'The device selected to run on'
      artifact_name:
        required: true
        type: string
        description: 'The torch_npu distribution artifact name'

# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

jobs:
  test:
    name: test torch_npu in ${{ inputs.image }} with ${{ inputs.device }}
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.image }}
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64/:/usr/local/Ascend/driver/lib64/
        - /usr/local/Ascend/driver/version.info:/usr/local/Ascend/driver/version.info
        - /etc/ascend_install.info:/etc/ascend_install.info
      options: >-
        --network host
        --device ${{ inputs.device }}
        --device /dev/davinci_manager
        --device /dev/devmm_svm
        --device /dev/hisi_hdc
      env:
        HTTP_PROXY: http://127.0.0.1:10809
        HTTPS_PROXY: http://127.0.0.1:10809
        ALL_PROXY: socks5://127.0.0.1:10808
        SOCKS_PROXY: socks5://127.0.0.1:10808
    steps:
      - name: Show NPU info
        run: |
          npu-smi info

      - name: Install system dependencies
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          apt update
          apt install --no-install-recommends -y git gcc g++ make cmake ninja-build

      - name: Download ${{ inputs.artifact_name }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ascend_npu

      - name: Install torch_npu
        working-directory: ascend_npu
        run: |
          pip install ${{ inputs.artifact_name }}

      - name: Install torch_npu dependencies
        working-directory: ascend_npu
        run: |
          curl -fsSL -O https://raw.githubusercontent.com/Ascend/pytorch/refs/heads/master/requirements.txt
          pip install -r requirements.txt

      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout benchmark
        uses: actions/checkout@v4
        with:
          repository: pytorch/benchmark
          path: benchmark

      - name: Install benchmark dependencies
        run: |
          pip install -r benchmark/requirements.txt --constraint ascend_npu/requirements.txt
          python benchmark/install.py --userbenchmark test_bench --models BERT_pytorch hf_GPT2 --constraint ascend_npu/requirements.txt

      - name: Run benchmarks
        working-directory: benchmark
        run: |
          python run_benchmark.py test_bench --accuracy --device npu --test eval \
              --models BERT_pytorch,hf_GPT2 \
              --output ascend_npu_benchmark.json

      - name: Upload the output file
        id: upload-output
        uses: actions/upload-artifact@v4
        with:
          name: ascend_npu_benchmark.json
          path: benchmark/ascend_npu_benchmark.json
          if-no-files-found: error
          retention-days: 1
          overwrite: true

      - name: Generate statistics report
        id: report
        run: |
          output_path=$(realpath benchmark/ascend_npu_benchmark.json)
          table=$(python .ci/benchmark.py)
          echo "table=${table}" >> $GITHUB_OUTPUT

      - name: Write to workflow job summary
        if: ${{ steps.report.outputs.table }}
        run: |
          echo "## Torchbenchmark statistics report" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.report.outputs.table }}" >> $GITHUB_STEP_SUMMARY

      - name: Modify README.md
        run: |
          echo "${{ github.event_name }}"
          echo "${{ github.event_name == 'push' }}"
