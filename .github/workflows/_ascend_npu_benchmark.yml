name: '_ascend_npu_benchmark'

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
        description: 'The runner selected to run on'
      image:
        required: true
        type: string
        description: 'The docker image which will be loaded'
      device:
        required: true
        type: string
        description: 'The device selected to run on'
      artifact_name:
        required: true
        type: string
        description: 'The torch_npu distribution artifact name'

# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

jobs:
  test:
    name: run benchmarks for torch_npu
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.image }}
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64/:/usr/local/Ascend/driver/lib64/
        - /usr/local/Ascend/driver/version.info:/usr/local/Ascend/driver/version.info
        - /etc/ascend_install.info:/etc/ascend_install.info
      options: >-
        --network host
        --device ${{ inputs.device }}
        --device /dev/davinci_manager
        --device /dev/devmm_svm
        --device /dev/hisi_hdc
      env:
        HTTP_PROXY: http://127.0.0.1:10809
        HTTPS_PROXY: http://127.0.0.1:10809
        ALL_PROXY: socks5://127.0.0.1:10808
        SOCKS_PROXY: socks5://127.0.0.1:10808
    steps:
      - name: Show NPU info
        run: |
          npu-smi info

      - name: Install system dependencies
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          apt update
          apt install --no-install-recommends -y git gcc g++ make cmake ninja-build curl

      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout benchmark
        uses: actions/checkout@v4
        with:
          repository: pytorch/benchmark
          path: benchmark

      - name: Download ${{ inputs.artifact_name }}
        working-directory: ascend_npu
        run: |
          curl -fsSL -o file.zip https://productionresultssa12.blob.core.windows.net/actions-results/0edb76f6-d15b-4a37-8032-bbaaace37dc2/workflow-job-run-3dc8fd7e-4368-5a92-293e-d53cefc8c4b3/artifacts/6a4de1e86796fdc760ffd7a57326621e3ef1a070d1a7a32221552670ba4904ad.zip?rscd=attachment%3B+filename%3D%22torch_npu-2.6.0%2Bgit69ceea7-cp310-cp310-linux_aarch64.whl.zip%22&se=2024-11-28T11%3A34%3A11Z&sig=iGzUDJSMXwj2RHn9HbFOgMF%2FY8GFAS7ojZck7ZlDZH0%3D&ske=2024-11-28T22%3A15%3A19Z&skoid=ca7593d4-ee42-46cd-af88-8b886a2f84eb&sks=b&skt=2024-11-28T10%3A15%3A19Z&sktid=398a6654-997b-47e9-b12b-9515b896b4de&skv=2024-11-04&sp=r&spr=https&sr=b&st=2024-11-28T11%3A24%3A06Z&sv=2024-11-04
          unzip file.zip

      - name: Install torch_npu
        working-directory: ascend_npu
        run: |
          pip install ${{ inputs.artifact_name }}

      - name: Install torch_npu dependencies
        working-directory: ascend_npu
        run: |
          curl -fsSL -O https://raw.githubusercontent.com/Ascend/pytorch/refs/heads/master/requirements.txt
          pip install -r requirements.txt

      - name: Install benchmark dependencies
        run: |
          pip install opencv-python-headless
          pip install -r benchmark/requirements.txt --constraint ascend_npu/requirements.txt "numpy==1.*"
          python benchmark/install.py --userbenchmark test_bench --continue_on_fail

      - name: Install project dependencies
        run: |
          pip install -r requirements.txt

      - name: Show environment info
        run: |
          npu_is_available=$(python -c "import torch; print(torch.npu.is_available())")
          npu_count=$(python -c "import torch; print(torch.npu.device_count())")
          echo "NPU is available: ${npu_is_available}"
          echo "NPU count: ${npu_count}"
          pip list | grep -E 'torch|numpy'

      - name: Run benchmarks
        working-directory: benchmark
        run: |
          python run_benchmark.py test_bench --accuracy --device npu --test eval \
              --output ascend_npu_benchmark.json

      - name: Upload the output file
        id: upload-output
        uses: actions/upload-artifact@v4
        with:
          name: ascend_npu_benchmark.json
          path: benchmark/ascend_npu_benchmark.json
          if-no-files-found: error
          retention-days: 1
          overwrite: true

      - name: Write to workflow job summary
        id: report
        run: |
          set -x
          realpath benchmark/ascend_npu_benchmark.json
          ls benchmark
          cat benchmark/ascend_npu_benchmark.json

          output_path=$(realpath benchmark/ascend_npu_benchmark.json)
          python .ci/benchmark.py ${output_path}

      # TODO(shink)
      - name: Update README.md
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "${{ github.event_name }}"
          echo "${{ github.event_name == 'push' }}"
